/* Reference to styling in CSS */

/*#########################################
####### ch-18 CSS #########################
###########################################*/

/* CSS Selectors */
* { margin: auto;} /* Universal Selector */
h1, h2, p {font-family: cursive;} /* Type Selector */
.intro, h1.intro { font: outline;} /* class selector; from <h1 class="intro">;*/
#myId { font-size: larger;} /* id selector; from <h1 id="myId">;*/
TD>b { font: outline;} /* child selector; selects the immediate child;*/
h2+p { font-weight: 100;} /* adjacent sibling selector;*/

/* attribute selector */
[lang|=fr] {background-color: red;} /* match if ele has att. with value;*/
a[title] { color: red;} /* match if ele has that att.*/
a[href="img.jpg"] { font-weight: bold;} /* if ele has that att. with that value */
a[title~=Web] { background-color: red;} /* if ele has att. with space seperated items that match value;*/
/* querySelector() and querySelectorAll() methods search and example;*/

/* Inserting CSS in HTML;
// for internal style sheet you can include it in HEAD ele to avilable in document;
<style type="text/css">
    selector { property: value;}
</style>

// for external style sheet 
    //using linkning
    <link rel="style sheet" type="text/css" href="test.css"/>

    //or importing
    <style type="text/css">
        @import url("mysheet.css")
        h1 { color: blue;}  //to add more element other than mysheet.css 
    </style>
*/

/* ########################################
####### ch-19 Backgrounds and #############
####### Color Gradients in CSS ############
###########################################*/

p {
    background-color: aqua; /* (color name; Hexadecimal eq value; RGB value; tansparent; inherit) */
    background-image: url("image.jpg"); /* (none) */
    background-repeat: no-repeat; /* (repeat-x; repeat-y; repeat; inherit) */
    background-attachment: fixed; /* (scroll) */
    background-position: 0em; /* used with image property (left; 100px; 50%) */
    background-clip: border-box; /* (padding-box) ; whether background image extends or not*/
    background-origin: border-box; /* (padding-box; content-box) ; starting postition in a box like shape*/
    background-size: auto; /* (auto; 15px; 50%) ; no negative; size of image i.e ussed for an element. */
    /* background-qantity: infinite;  !work ; (int like 5; infinite) ; no negative; repetition of img*/
    /*background-spacing: 5px 6px;  !work; ( value ) ; specify the distance b/w repeated img in bg */
    background: orange url("metal.jpg") 100% auto; /* (bg-color; bg-img; bg-repeat; bg-attachment; positon; size)*/
    opacity: 0.5; 
    background: linear-gradient(top, #35425d 0%, #fff 100%); /* (pos of first color; #AAA prime color; B- % from fade begins; #xxx second color; Y- % from fade begins) */

}

/*#########################################
####### ch-20 Fonts and Text Styles ######
##########################################*/

body {
    font-family: sans-serif; /*(serif, cursive, fantasy, mono-space) ; more than one can be spcified,
    if one font unavailable then the other will be taken;*/
    font-size: 10px;
    font-size: small; /* using absolute values (xx-small, x-small, meduim, large, x-large, xx-large);*/
    font-size: larger; /* using relative value with respecte to parent element; (smaller) */
    font-size: 20%; /* using percentage values with respect to parent element;*/

    font-size-adjust: 0.5; /* ration of font height of lowercase letter to the actual height of the font;*/
    font-stretch: condensed; /* wide range of options */
    font-style: italic; /* (normal; italic; oblique)*/
    font-variant: small-caps; /* (initial; inherit; unset) */
    font-weight: 100; /* (100-900; bold; lighter ..etc) */
    font: bold italic 30px verdana; /* see for the order */
    @font-face {
        font-family: new.ttf;
        src: url(new.ttf); /* to define our own exeternal font*/
    }
    /* a wide range of text-properties; */
    text-transform: capitalize; /* (lowercase; uppercase; none;) */
    text-indent: 0%;
    text-shadow: #ff0000 12px -12px 2px;
    text-overflow: clip; /* range of options*/
}

/*#############################################
### ch-21 Creating Boxes and Columns in CSS ###
###############################################*/

/* Box Model ; from out to in ; ( margin area, border, padding, content);

// Padding properties;  */
#container { padding: 0%;} /* (padding-top,left,right,bottom) used with (length; %; auto) */
/* Border properties    */
p {
    border-width: thin;
    border-top-width: thick;
    border-color: transparent;
    border-top-color: inherit;
    border-style: groove; /* (none; hidden; dotted; dashed; solid; double; ridge; inset; outset)*/
    border: thick double greenyellow;
    border-radius: 5px 10px 5px 10px / 10px 5px 10px 5px; /* to draw rounded corners */
    border-radius: 5px;
    border-radius: 5px 10px / 10px;

    border-image: url("my.jpg") 27 round stretch;
    border-image-source: url("my.jpg");
    border-image-slice: fill;
    border-image-width: 27;
    border-image-outset: 34; /* value of the border image that can be extended beyond the border box; (length; number)*/
    border-image-repeat: repeat; /* image for the sides, middle of border are scaled and tiled; (stretch; repeat; round) */
    box-shadow: 20px 20px 20px #888; /* (none; length length length color); len1-horizontal-offset len2-vertical-offset len3-blur-radius */
}

/* Margin properties */
p {
    margin: auto; /* (auto; len; %; inherit) */
}
p {
    width: 100px;
    height: 200px; /* sets the width and height of the box. ; (len; %; auto) */
    min-width: 10%;
    max-width: 20%;
    min-height: 10%;
    max-height: 10%; /* no negative one to all properties; */
}
img { float: left;}
/* overflowing of box content */
p {
    overflow-x: visible; /* clips at sides ; (hidden; scroll; auto; no-display; no-content) */
    overflow-y: hidden;
    overflow: initial; /* scrolling methods for elements that overflow */
}
/* marquee properties deprecated aviod using them.

Rotating boxes ; (rotation; rotation-point) are deprecated; use rotate instead

//Template layout model ( explore the grid layout too )
letter represents the slot; @ shows the default slot; (.) white spaces;
*/
body {
    height: 100%;
    display: "a . b . c" /2em   /* (keyword; string(.;@; ); row-height; col-width) ; (*) represents all rows/cols of eq width/height.*/
    ". . ." /1em
    "d . e . f" /2em
    ". . ." /1em
    "g . h . i" /2em
    5em 1em * 1em 10em
}
#logo {position: a;}    /* position describes its block; */
#motto {position: b;}

/* Multi-column method (it enables you to show your elements content in multi-columns*/
p {
    column-count: 3;
    column-width: 10px;
    column-gap: 2px;    /* column padding */
    column-rule: 2px groove greenyellow; /* border b/w columns; (column-rule-width: column-rule-style: column-rule-color:) */
    column-fill: balance; /* balances the content of an element in all columns; (balance; auto) */
    column-span: all; /* to span across multiple columns (integer; all) */
    /* to insert column breaks; (auto; always; avoid; left; right; page; column; avoid-page; avoid-column) */
    break-before: always;
    break-after: avoid;
    break-inside: avoid-column; 
}

/*#########################################################
## ch-22 Displaying, Positioning and Floating an Element ##
###########################################################*/

p {
    display: none; /* (none; block; inline; inline-block; inline-table; etc.) ; how to display and element; */
    visibility: hidden; /* (visible; hidden; collapse; inherit) */
    /* the element hidden using the display property as none does not preserves its space; 
    while the element using visibility property as hidden preserves its space in a web page. */
    
    position: fixed; /* controls position wrt normal flow of elements; (relative; absolute; fixed; static; inherit)*/
    top: 10px; /* (top; bottom; left; right) used with the position property */
    z-index: -1; /* to overlap the contents */

    float: right; /* float specific element wrt content or parent element; (left; right; none; inherit;) */
    clear: both; /* to disable effect of float; (left; right; none; both; inherit); */
}

/*###########################
### ch-23 List Styles #######
#############################*/

li {
    list-style-type: none; /* (glyph; algorithmic; symbolic); these are types
    glyph : (none; disc; circle; square)
    algorithmic: (armenium; decimal; geogian; lower-alpha; lower-greek; lower-latin; lower-roman; and there upper-counterpart)
    symbolic: (asterisks; footnotes)    */
    list-style-image: url("myimg.jpg");
    list-style-position: inside; /* (inside; outside) */
    list-style: outside url("myimg.jpg") none;
}

/*#################################
##### ch-24 Table Layouts #########
###################################*/

table {
    table-layout: auto; /* (fixed; auto) */
    caption-side: top; /* (top; bottom; inherit) */
    border-collapse: collapse; /* (collapse; seperate; inherit) */
    border-spacing: 1em 2em; /* (length; inherit) */
    empty-cells: show; /* (show; hide; inherit) */
}

/*#### ch-25 Pseudo-Classes and Pseudo-Elements ####

pseudo-classes used to add special effects to selectors;
syntax: element: pseudo-class { property: value; }
categories: (dynamic; target; lang; UI ele states; structural; negation)

Dynamic (used for the links):*/
a:link {color: greenyellow;} /* (:link; visited; hover; active) */
/* target : if the user if target to following section liek http://ex.com/html/top.html#section2 */
p:target {
    color: grey;
}
/* UI ele sates */
input[type="text"]:enabled { background: red;}
input:checked { border: 1px solid pink;} /* (enabled; disabled; checked; indeterminate) */
/* structural type */
p:first-of-type { border: 2px solid black; background: lime;}
li:first-child {border: 2px solid } /* (root; :nth-child; :nth-last-child; and many more) */
/* different color for odd and even rows in table */
tr:nth-child(odd) {background-color: lime;}
tr:nth-child(even) {background-color: linen;}

/* Negation */
button:not([DISABLED]) {color: linen;}
*:not(P) {color: #000;}
html:not(:link):not(:visited) {color: #000;}

/* Pseudo-Elements ( called so bcz not part of standard markup of HTML )
syntax: selector::pseudo-element { property: value;}*/
p::first-letter { font-size: 200%; font-weight: bold; float: left;} /* (first-line; first-letter; before; after) */

/*##### ch-26 Effects, Frames, and Controls in CSS ####
types: (opacity; transition; tranformation; animation)*/

img{
    opacity: 0.6; /* (0.1-1.0 | %) */
    transition-property: opacity; /* which property to transite */
    transition-duration: 2s;
    transition-delay: 2s;
    transition-timing-function: ease-in-out; /* (ease; linear; ease-in; ease-out; ease-in-out; cubic-bezier(n,n,n,n)) changes the speed of the transition */
}
p {
    width: 100px;
    transform: scale(12%); /* (matrix; rotate[X|Y]; scale; scale[Y|X]; skew; skew[X|Y]; translate; translate[X|Y]) */
    transform-origin: left; /* (left; right; center; bottom; top; 50% 50%) */
    transform-style: flat; /* (flat; perpective-3D) */
    perspective: initial;
    perspective-origin: left; /* (left; right; c; t; b; %; 50% 50%) */
    backface-visibility: visible; /* (visible and hidden) ; back side of an element */ 
}
@keyframes example {    /* to gradually change the animation; other than from, to %(as many times) can be used */
    from {background-color: ivory;}
    to {background-color: khaki;}
}
img {
    animation-name: example; /* on which ele animation to be applied */
    animation-duration: 1s;
    animation-timing-function: ease;
    animation-iteration-count: infinite;
    animation-direction: reverse; /* (reverse; alternate; alternate-reverse) */
    animation-delay: 0s;    /* -ve values allowed */
    animation-direction: reverse; /* (normal(default); reverse; alternate; alternate-default) */
    animation-fill-mode: backwards; /* (none; forwards-retains the style set last-key-frame; backwards-get style first key-frame,retain during animation delay; both) */
}
/* frames -- refer to divide a page into portions ; FRAME ele of HTML has become obsolete*/
#frame {        /* makes a non movable left frame */
    position: relative;
    top: 0px;
    bottom: 0px;
    right: 0;
    width: 100px;
    height: 100%;
}
/* making a good scrollbar */
body {
    scrollbar-face-color: red;
    scrollbar-base-color: rosybrown;
    scrollbar-arrow-color: royalblue;
    scrollbar-track-color: saddlebrown;
    scrollbar-shadow-color: salmon;
    scrollbar-highlight-color: sandybrown;
    scrollbar-3dlight-color: seagreen;
    scrollbar-darkshadow-color: seashell;
}

/* HTML5 Black Book CSS Reference Completed