<?xml version="1.0" encoding="ISO-8859-1" standalone="true"?>   <!--standalone true-has internal DTD; flase-has external DTD; -->
<!-- ch-28 basics of xml -->
<employee>  <!-- there should be a root ele -->     <!-- ele can't start with : or xml(any case) -->
    <firstname>Ambrish</firstname>      <!-- nested element as nested in employee ele -->
    <lastname>Kumar</lastname>
    <age>25</age>
    <empid id="A24"></empid>    <!-- Empty ele -->  <!-- id is an attribute and the value should be in "" -->
    <!-- Entity references- to use reserve words (<)-&lt; (>)-&gt; (&)-&amp; ("")-&quot; ('')-&apos; -->
</employee>
<!-- DTD for single ele -->
<!DOCTYPE PRODUCTDATA[ <!ELEMENT PRODUCTDATA (PRODUCT+)> ]>
<!-- qualifiers- ?-to 0 or more ele
    *-zero or more ele
    +-one or more ele
    elements can be in group ((image, title)+)- to include an image for every title ele -->
<!DOCTYPE employee [        <!-- INTERNAL DTD; include it at first after xml ele; external-<!DOCTYPE employee SYSTEM "email.dtd"> -->
    <!ELEMENT employee (firstname, lastname, age, empid)>   <!-- DTD for nested ones -->
    <!ELEMENT firstname (#PCDATA)>
    <!ELEMENT lastname (#PCDATA)>
    <!ELEMENT age (#PCDATA)>
    <!ELEMENT empid (#PCDATA)>
    <!ATTLIST empid id CDATA "000">     <!-- (ele-name; att-name; att-type; default-value) 
        atttypes- (values seperated by |; CDATA- unparsed char data(str); ENTITIES; ENTITY; ID)
        default-value- (value; #FIXED value; #REQUIRED; #IMPLIED- not compulsary to provide) -->
    <!ENTITY writer "ken Greenwood"> <!-- entities are shortcut or aliases that are replaced by complete defination at runtime.
        <!ENTITY en-name SYSTEM "URI/URL"> (EXTERNAL)
        <!ENTITY en-name "en-defination"> (INTERNAL)
        (can be used in xml as) <author>&writer;</author>
        main use: to add copyright(long) file -->
]>

<!-- ch-29 Implementing Advanced Features of XML -->

<!-- namespaces-helps to avoid name conflicts while combining diff HTML and XML docs -->
<root xmlns="http://www.example.com" xmlns:n="http://www.example2.com"> <!-- 1. default namespace; 2.(n); if (n) not specified then default applied.-->
<table>
    content
</table>
<n:bed>
    content
</n:bed>
<!-- defining the namespace in DTD-->
<!DOCTYPE title [
    <!ELEMENT title (%inline;)*>
    <!ATTLIST title     xmlns CDATA #FIXED "http://www.example.com/cassette">
]>

<!-- XSD Schema: alternative to DTD; defines the structure of an ele with more features,
 such as data types and conditions; scheme documents are organized by namespaces.
  means that all the components of a schema document belong to a target namespace -->
<!-- xml document to include a xsd file -->
<note
xmlns="https://www.w3schools.com"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="https://www.w3schools.com/xml note.xsd">    <!-- reference to a xml schema -->
  <to>Tove</to>
  <from>Jani</from>
  <heading>Reminder</heading>
  <body>Don't forget me this weekend!</body>
</note>
<!-- a xsd or schema file 
a file is started by root element like xs:schema -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
targetNamespace="https://www.w3schools.com"
xmlns="https://www.w3schools.com"
elementFormDefault="qualified">
<!-- xmlns:xs- user-defined namespace declaration
targetNamespace: elements defined by schema (to, from, body..) come from specified url
any element used by xml instance doc which were declared in this schema must be namespace qualified -->
...
...
</xs:schema>